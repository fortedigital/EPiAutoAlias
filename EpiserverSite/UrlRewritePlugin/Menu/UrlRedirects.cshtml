@using EPiServer.Framework.Web.Mvc.Html
@using EPiServer.Framework.Web.Resources
@using EPiServer.Framework.Serialization
@using EPiServer.Shell
@using EPiServer.Shell.Web.Mvc
@using EPiServer.Shell.Web.Mvc.Html
@using EPiServer.Shell.UI.Web.Mvc.Html
@using EPiServer.Shell.Navigation
@using EPiServer.Shell.UI.Web.Resources
@using EPiServer.Shell.Web;
@using System.Web.Mvc.Html

@{
    Layout = "./UrlRedirectsLayout.cshtml";
    ViewBag.Title = "Url Redirects";
}
@Html.Raw(ClientResources.RenderResources("BootstrapperHeader"))
@inherits System.Web.Mvc.WebViewPage<EPiServer.Shell.Web.Mvc.BootstrapperViewModel>

    <div class="epi-padding Sleek">
        <div class="epi-contentContainer epi-fullWidth">
            <div class="epi-contentArea">
                <h1 class="EP-prefix">
                    Url Redirects
                </h1>

                <p>
                    <span class="EP-systemInfo">
                        Url Redirects are used to manage redirects.
                    </span>
                </p>

                <div data-dojo-type="UrlRedirectsMenu"></div>
            </div>
        </div>
    </div>



    @Html.Raw(Html.ModuleScripts(Model.Modules.GetStartupModules(Model.ModuleName)))

    <script type="text/javascript">
var useContainers = @Model.UseContainers.ToString().ToLower();
require(["epi/shell/Bootstrapper"], function (Bootstrapper) {

var settings = @Html.SerializeObject(Model.Modules, KnownContentTypes.Json).Replace("<", "<").Replace(">", ">"),
viewSettings = @Html.SerializeObject(Model.ViewSettings, KnownContentTypes.Json).Replace("<", "<").Replace(">", ">"),
bootStrapper = new Bootstrapper(settings);

bootStrapper.initializeApplication("@Model.ViewName", "@Model.ModuleName", viewSettings).then(function () {
require([
"dojo/_base/connect",
"dojo/parser",
"dijit/registry",
"dijit/layout/BorderContainer",
"dijit/layout/ContentPane",
"epi/shell/widget/GlobalMenu",
"epi/shell/widget/Application",
"epi/shell/widget/LicenseInformation",
"epi/shell/widget/ApplicationContentPane",
"dojo/domReady!"],
function (connect, parser, registry) {

parser.parse();

if (useContainers) {
// Trigger layout when the global navigation changes its layout.
connect.subscribe("/epi/shell/globalnavigation/layoutchange", null, function() {
registry.byId("rootContainer").layout();
});
}
});
});
});
    </script>
    }
